type ChordAction = string | { cmd: string; args: unknown[] };

export type Chord = ChordAction | ChordAction[];

export type ChordMap = Record<string, Chord>;

const normal = {
	".": "chords.repeatLastChord",
	q: "chords.toggleRecording",
	"@q": "chords.replay",
	i: "chords.setInsertMode",
	a: ["cursorRight", "chords.setInsertMode"],
	I: ["cursorHome", "chords.setInsertMode"],
	A: ["cursorEnd", "chords.setInsertMode"],
	o: ["editor.action.insertLineAfter", "chords.setInsertMode"],
	O: ["editor.action.insertLineBefore", "chords.setInsertMode"],
	v: "chords.setVisualMode",
	// movement
	h: "cursorLeft",
	j: "cursorDown",
	k: "cursorUp",
	l: "cursorRight",
	gg: "cursorTop",
	G: "cursorBottom",
	"^": "cursorHome",
	$: "cursorEnd",
	w: "cursorWordStartRight",
	e: "cursorWordEndRight",
	b: "cursorWordStartLeft",
	ge: "cursorWordEndLeft",
	"%": "editor.action.jumpToBracket",
	f: "chords.nextOccurrence",
	F: "chords.prevOccurrence",
	">": "editor.action.insertCursorBelow",
	"<": "editor.action.insertCursorAbove",
	"g>": "editor.action.insertCursorAtLastLine",
	m: "editor.action.addSelectionToNextFindMatch",
	M: "editor.action.addSelectionToPreviousFindMatch",
	"/": "actions.find",
	// modifiers
	"=": "editor.emmet.action.incrementNumberByOne",
	"-": "editor.emmet.action.decrementNumberByOne",
	// registers
	u: "undo",
	U: "redo",
	p: "editor.action.clipboardPasteAction",
	// registers -> copy
	yy: [
		"chords.saveSelections",
		"cursorHome",
		"cursorEndSelect",
		"editor.action.clipboardCopyAction",
		"chords.restoreSelections",
	],
	yaw: [
		"chords.saveSelections",
		"cursorWordEndLeft",
		"cursorWordEndRightSelect",
		"cursorWordStartRightSelect",
		"editor.action.clipboardCopyAction",
		"chords.restoreSelections",
	],
	yab: [
		"chords.saveSelections",
		"editor.action.selectToBracket",
		"editor.action.clipboardCopyAction",
		"chords.restoreSelections",
	],
	'ya"': [
		"chords.saveSelections",
		{ cmd: "chords.selectAroundRight", args: ['"', '"'] },
		"editor.action.clipboardCopyAction",
		"chords.restoreSelections",
	],
	"ya'": [
		"chords.saveSelections",
		{ cmd: "chords.selectAroundRight", args: ["'", "'"] },
		"editor.action.clipboardCopyAction",
		"chords.restoreSelections",
	],
	"ya`": [
		"chords.saveSelections",
		{ cmd: "chords.selectAroundRight", args: ["`", "`"] },
		"editor.action.clipboardCopyAction",
		"chords.restoreSelections",
	],
	"ya(": [
		"chords.saveSelections",
		{ cmd: "chords.selectAroundLeft", args: ["(", ")"] },
		"editor.action.clipboardCopyAction",
		"chords.restoreSelections",
	],
	"ya{": [
		"chords.saveSelections",
		{ cmd: "chords.selectAroundLeft", args: ["{", "}"] },
		"editor.action.clipboardCopyAction",
		"chords.restoreSelections",
	],
	"ya[": [
		"chords.saveSelections",
		{ cmd: "chords.selectAroundLeft", args: ["[", "]"] },
		"editor.action.clipboardCopyAction",
		"chords.restoreSelections",
	],
	"ya<": [
		"chords.saveSelections",
		{ cmd: "chords.selectAroundLeft", args: ["<", ">"] },
		"editor.action.clipboardCopyAction",
		"chords.restoreSelections",
	],
	"ya)": [
		"chords.saveSelections",
		{ cmd: "chords.selectAroundRight", args: ["(", ")"] },
		"editor.action.clipboardCopyAction",
		"chords.restoreSelections",
	],
	"ya}": [
		"chords.saveSelections",
		{ cmd: "chords.selectAroundRight", args: ["{", "}"] },
		"editor.action.clipboardCopyAction",
		"chords.restoreSelections",
	],
	"ya]": [
		"chords.saveSelections",
		{ cmd: "chords.selectAroundRight", args: ["[", "]"] },
		"editor.action.clipboardCopyAction",
		"chords.restoreSelections",
	],
	"ya>": [
		"chords.saveSelections",
		{ cmd: "chords.selectAroundRight", args: ["<", ">"] },
		"editor.action.clipboardCopyAction",
		"chords.restoreSelections",
	],
	yiw: [
		"chords.saveSelections",
		"cursorWordStartLeft",
		"cursorWordEndRightSelect",
		"editor.action.clipboardCopyAction",
		"chords.restoreSelections",
	],
	'yi"': [
		"chords.saveSelections",
		{ cmd: "chords.selectInsideRight", args: ['"', '"'] },
		"editor.action.clipboardCopyAction",
		"chords.restoreSelections",
	],
	"yi'": [
		"chords.saveSelections",
		{ cmd: "chords.selectInsideRight", args: ["'", "'"] },
		"editor.action.clipboardCopyAction",
		"chords.restoreSelections",
	],
	"yi`": [
		"chords.saveSelections",
		{ cmd: "chords.selectInsideRight", args: ["`", "`"] },
		"editor.action.clipboardCopyAction",
		"chords.restoreSelections",
	],
	"yi(": [
		"chords.saveSelections",
		{ cmd: "chords.selectInsideLeft", args: ["(", ")"] },
		"editor.action.clipboardCopyAction",
		"chords.restoreSelections",
	],
	"yi{": [
		"chords.saveSelections",
		{ cmd: "chords.selectInsideLeft", args: ["{", "}"] },
		"editor.action.clipboardCopyAction",
		"chords.restoreSelections",
	],
	"yi[": [
		"chords.saveSelections",
		{ cmd: "chords.selectInsideLeft", args: ["[", "]"] },
		"editor.action.clipboardCopyAction",
		"chords.restoreSelections",
	],
	"yi<": [
		"chords.saveSelections",
		{ cmd: "chords.selectInsideLeft", args: ["<", ">"] },
		"editor.action.clipboardCopyAction",
		"chords.restoreSelections",
	],
	"yi)": [
		"chords.saveSelections",
		{ cmd: "chords.selectInsideRight", args: ["(", ")"] },
		"editor.action.clipboardCopyAction",
		"chords.restoreSelections",
	],
	"yi}": [
		"chords.saveSelections",
		{ cmd: "chords.selectInsideRight", args: ["{", "}"] },
		"editor.action.clipboardCopyAction",
		"chords.restoreSelections",
	],
	"yi]": [
		"chords.saveSelections",
		{ cmd: "chords.selectInsideRight", args: ["[", "]"] },
		"editor.action.clipboardCopyAction",
		"chords.restoreSelections",
	],
	"yi>": [
		"chords.saveSelections",
		{ cmd: "chords.selectInsideRight", args: ["<", ">"] },
		"editor.action.clipboardCopyAction",
		"chords.restoreSelections",
	],
	// registers -> cut
	xx: [
		"chords.saveSelections",
		"cursorLineStart",
		"cursorLineEndSelect",
		"editor.action.clipboardCutAction",
		"chords.restoreSelections",
	],
	xaw: [
		"chords.saveSelections",
		"cursorWordEndLeft",
		"cursorWordEndRightSelect",
		"cursorWordStartRightSelect",
		"editor.action.clipboardCutAction",
		"chords.restoreSelections",
	],
	xab: [
		"chords.saveSelections",
		"editor.action.selectToBracket",
		"editor.action.clipboardCutAction",
		"chords.restoreSelections",
	],
	'xa"': [
		"chords.saveSelections",
		{ cmd: "chords.selectAroundRight", args: ['"', '"'] },
		"editor.action.clipboardCutAction",
		"chords.restoreSelections",
	],
	"xa'": [
		"chords.saveSelections",
		{ cmd: "chords.selectAroundRight", args: ["'", "'"] },
		"editor.action.clipboardCutAction",
		"chords.restoreSelections",
	],
	"xa`": [
		"chords.saveSelections",
		{ cmd: "chords.selectAroundRight", args: ["`", "`"] },
		"editor.action.clipboardCutAction",
		"chords.restoreSelections",
	],
	"xa(": [
		"chords.saveSelections",
		{ cmd: "chords.selectAroundLeft", args: ["(", ")"] },
		"editor.action.clipboardCutAction",
		"chords.restoreSelections",
	],
	"xa{": [
		"chords.saveSelections",
		{ cmd: "chords.selectAroundLeft", args: ["{", "}"] },
		"editor.action.clipboardCutAction",
		"chords.restoreSelections",
	],
	"xa[": [
		"chords.saveSelections",
		{ cmd: "chords.selectAroundLeft", args: ["[", "]"] },
		"editor.action.clipboardCutAction",
		"chords.restoreSelections",
	],
	"xa<": [
		"chords.saveSelections",
		{ cmd: "chords.selectAroundLeft", args: ["<", ">"] },
		"editor.action.clipboardCutAction",
		"chords.restoreSelections",
	],
	"xa)": [
		"chords.saveSelections",
		{ cmd: "chords.selectAroundRight", args: ["(", ")"] },
		"editor.action.clipboardCutAction",
		"chords.restoreSelections",
	],
	"xa}": [
		"chords.saveSelections",
		{ cmd: "chords.selectAroundRight", args: ["{", "}"] },
		"editor.action.clipboardCutAction",
		"chords.restoreSelections",
	],
	"xa]": [
		"chords.saveSelections",
		{ cmd: "chords.selectAroundRight", args: ["[", "]"] },
		"editor.action.clipboardCutAction",
		"chords.restoreSelections",
	],
	"xa>": [
		"chords.saveSelections",
		{ cmd: "chords.selectAroundRight", args: ["<", ">"] },
		"editor.action.clipboardCutAction",
		"chords.restoreSelections",
	],
	xiw: [
		"chords.saveSelections",
		"cursorWordStartLeft",
		"cursorWordEndRightSelect",
		"editor.action.clipboardCutAction",
		"chords.restoreSelections",
	],
	'xi"': [
		"chords.saveSelections",
		{ cmd: "chords.selectInsideRight", args: ['"', '"'] },
		"editor.action.clipboardCutAction",
		"chords.restoreSelections",
	],
	"xi'": [
		"chords.saveSelections",
		{ cmd: "chords.selectInsideRight", args: ["'", "'"] },
		"editor.action.clipboardCutAction",
		"chords.restoreSelections",
	],
	"xi`": [
		"chords.saveSelections",
		{ cmd: "chords.selectInsideRight", args: ["`", "`"] },
		"editor.action.clipboardCutAction",
		"chords.restoreSelections",
	],
	"xi(": [
		"chords.saveSelections",
		{ cmd: "chords.selectInsideLeft", args: ["(", ")"] },
		"editor.action.clipboardCutAction",
		"chords.restoreSelections",
	],
	"xi{": [
		"chords.saveSelections",
		{ cmd: "chords.selectInsideLeft", args: ["{", "}"] },
		"editor.action.clipboardCutAction",
		"chords.restoreSelections",
	],
	"xi[": [
		"chords.saveSelections",
		{ cmd: "chords.selectInsideLeft", args: ["[", "]"] },
		"editor.action.clipboardCutAction",
		"chords.restoreSelections",
	],
	"xi<": [
		"chords.saveSelections",
		{ cmd: "chords.selectInsideLeft", args: ["<", ">"] },
		"editor.action.clipboardCutAction",
		"chords.restoreSelections",
	],
	"xi)": [
		"chords.saveSelections",
		{ cmd: "chords.selectInsideRight", args: ["(", ")"] },
		"editor.action.clipboardCutAction",
		"chords.restoreSelections",
	],
	"xi}": [
		"chords.saveSelections",
		{ cmd: "chords.selectInsideRight", args: ["{", "}"] },
		"editor.action.clipboardCutAction",
		"chords.restoreSelections",
	],
	"xi]": [
		"chords.saveSelections",
		{ cmd: "chords.selectInsideRight", args: ["[", "]"] },
		"editor.action.clipboardCutAction",
		"chords.restoreSelections",
	],
	"xi>": [
		"chords.saveSelections",
		{ cmd: "chords.selectInsideRight", args: ["<", ">"] },
		"editor.action.clipboardCutAction",
		"chords.restoreSelections",
	],
	// deletions
	dd: "editor.action.deleteLines",
	dw: "deleteWordRight",
	db: ["cursorWordStartLeftSelect", "deleteLeft"],
	de: ["cursorWordEndRightSelect", "deleteLeft"],
	dge: ["cursorWordEndLeftSelect", "deleteLeft"],
	daw: [
		"cursorWordEndLeft",
		"cursorWordEndRightSelect",
		"cursorWordStartRightSelect",
		"deleteLeft",
	],
	dab: ["editor.action.selectToBracket", "deleteLeft"],
	'da"': [{ cmd: "chords.selectAroundRight", args: ['"', '"'] }, "deleteLeft"],
	"da'": [{ cmd: "chords.selectAroundRight", args: ["'", "'"] }, "deleteLeft"],
	"da`": [{ cmd: "chords.selectAroundRight", args: ["`", "`"] }, "deleteLeft"],
	"da(": [{ cmd: "chords.selectAroundLeft", args: ["(", ")"] }, "deleteLeft"],
	"da{": [{ cmd: "chords.selectAroundLeft", args: ["{", "}"] }, "deleteLeft"],
	"da[": [{ cmd: "chords.selectAroundLeft", args: ["[", "]"] }, "deleteLeft"],
	"da<": [{ cmd: "chords.selectAroundLeft", args: ["<", ">"] }, "deleteLeft"],
	"da)": [{ cmd: "chords.selectAroundRight", args: ["(", ")"] }, "deleteLeft"],
	"da}": [{ cmd: "chords.selectAroundRight", args: ["{", "}"] }, "deleteLeft"],
	"da]": [{ cmd: "chords.selectAroundRight", args: ["[", "]"] }, "deleteLeft"],
	"da>": [{ cmd: "chords.selectAroundRight", args: ["<", ">"] }, "deleteLeft"],
	diw: "deleteInsideWord",
	dib: [
		"editor.action.selectToBracket",
		"chords.shrinkSelection",
		"deleteLeft",
	],
	'di"': [{ cmd: "chords.selectInsideRight", args: ['"', '"'] }, "deleteLeft"],
	"di'": [{ cmd: "chords.selectInsideRight", args: ["'", "'"] }, "deleteLeft"],
	"di`": [{ cmd: "chords.selectInsideRight", args: ["`", "`"] }, "deleteLeft"],
	"di(": [{ cmd: "chords.selectInsideLeft", args: ["(", ")"] }, "deleteLeft"],
	"di{": [{ cmd: "chords.selectInsideLeft", args: ["{", "}"] }, "deleteLeft"],
	"di[": [{ cmd: "chords.selectInsideLeft", args: ["[", "]"] }, "deleteLeft"],
	"di<": [{ cmd: "chords.selectInsideLeft", args: ["<", ">"] }, "deleteLeft"],
	"di)": [{ cmd: "chords.selectInsideRight", args: ["(", ")"] }, "deleteLeft"],
	"di}": [{ cmd: "chords.selectInsideRight", args: ["{", "}"] }, "deleteLeft"],
	"di]": [{ cmd: "chords.selectInsideRight", args: ["[", "]"] }, "deleteLeft"],
	"di>": [{ cmd: "chords.selectInsideRight", args: ["<", ">"] }, "deleteLeft"],
} satisfies ChordMap;

const visual = {
	".": "chords.repeatLastChord",
	n: "chords.setNormalMode",
	// basic movement
	h: "cursorLeftSelect",
	j: "cursorDownSelect",
	k: "cursorUpSelect",
	l: "cursorRightSelect",
	gg: "cursorTopSelect",
	G: "cursorBottomSelect",
	"^": "cursorHomeSelect",
	$: "cursorEndSelect",
	w: "cursorWordStartRightSelect",
	e: "cursorWordEndRightSelect",
	b: "cursorWordStartLeftSelect",
	ge: "cursorWordEndLeftSelect",
	f: "chords.nextOccurrenceSelect",
	F: "chords.prevOccurrenceSelect",
	">": "editor.action.insertCursorBelow",
	"<": "editor.action.insertCursorAbove",
	"g>": "editor.action.insertCursorAtLastLine",
	m: "editor.action.addSelectionToNextFindMatch",
	M: "editor.action.addSelectionToPreviousFindMatch",
	"/": "actions.find",
	// registers
	u: "undo",
	U: "redo",
	p: ["editor.action.clipboardPasteAction", "chords.setNormalMode"],
	y: ["editor.action.clipboardCopyAction", "chords.setNormalMode"],
	x: ["editor.action.clipboardCutAction", "chords.setNormalMode"],
	d: "deleteLeft",
	D: "deleteRight",
	// selections
	s: "chords.selectSymbolAtCursor",
	aw: [
		"cursorWordEndLeft",
		"cursorWordEndRightSelect",
		"cursorWordStartRightSelect",
	],
	ab: "editor.action.selectToBracket",
	'a"': { cmd: "chords.selectAroundRight", args: ['"', '"'] },
	"a'": { cmd: "chords.selectAroundRight", args: ["'", "'"] },
	"a`": { cmd: "chords.selectAroundRight", args: ["`", "`"] },
	"a(": { cmd: "chords.selectAroundLeft", args: ["(", ")"] },
	"a{": { cmd: "chords.selectAroundLeft", args: ["{", "}"] },
	"a[": { cmd: "chords.selectAroundLeft", args: ["[", "]"] },
	"a<": { cmd: "chords.selectAroundLeft", args: ["<", ">"] },
	"a)": { cmd: "chords.selectAroundRight", args: ["(", ")"] },
	"a}": { cmd: "chords.selectAroundRight", args: ["{", "}"] },
	"a]": { cmd: "chords.selectAroundRight", args: ["[", "]"] },
	"a>": { cmd: "chords.selectAroundRight", args: ["<", ">"] },
	iw: ["cursorWordStartLeft", "cursorWordEndRightSelect"],
	ib: ["editor.action.selectToBracket", "chords.shrinkSelection"],
	'i"': { cmd: "chords.selectInsideRight", args: ['"', '"'] },
	"i'": { cmd: "chords.selectInsideRight", args: ["'", "'"] },
	"i`": { cmd: "chords.selectInsideRight", args: ["`", "`"] },
	"i(": { cmd: "chords.selectInsideLeft", args: ["(", ")"] },
	"i{": { cmd: "chords.selectInsideLeft", args: ["{", "}"] },
	"i[": { cmd: "chords.selectInsideLeft", args: ["[", "]"] },
	"i<": { cmd: "chords.selectInsideLeft", args: ["<", ">"] },
	"i)": { cmd: "chords.selectInsideRight", args: ["(", ")"] },
	"i}": { cmd: "chords.selectInsideRight", args: ["{", "}"] },
	"i]": { cmd: "chords.selectInsideRight", args: ["[", "]"] },
	"i>": { cmd: "chords.selectInsideRight", args: ["<", ">"] },
} satisfies ChordMap;

const leader = {
	k: "editor.action.showHover",
	h: "workbench.action.focusLeftGroup",
	l: "workbench.action.focusRightGroup",
	L: "workbench.action.moveEditorToNextGroup",
	H: "workbench.action.moveEditorToPreviousGroup",
	gd: "editor.action.revealDefinition",
	gl: "workbench.action.gotoLine",
	gr: "editor.action.goToReferences",
	pd: "editor.action.peekDefinition",
	"<enter>": "togglePeekWidgetFocus",
	tcu: "editor.action.transformToUppercase",
	tcl: "editor.action.transformToLowercase",
	tck: "editor.action.transformToKebabcase",
	tcc: "editor.action.transformToCamelcase",
	tcs: "editor.action.transformToSnakecase",
	tcp: "editor.action.transformToPascalcase",
	tct: "editor.action.transformToTitlecase",
	m: "editor.emmet.action.evaluateMathExpression",
} satisfies ChordMap;

export default {
	normal,
	visual,
	leader,
} as const;
